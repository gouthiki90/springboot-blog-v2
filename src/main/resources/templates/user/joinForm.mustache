{{>/layout/header}}
<!--컨테이너 시작-->
<div class="container mt-3">
    <!--회원가입 폼 시작-->
    <form action="">
        <div class="mb-3 mt-3">
            <input id="username" type="text" class="form-control" placeholder="Enter username" required maxlength="12">
        </div>
        <div class="mb-3">
            <input id="password" type="password" class="form-control" placeholder="Enter password" required
                maxlength="12">
        </div>
        <div class="mb-3 mt-3">
            <input id="email" type="email" class="form-control" placeholder="Enter email" required maxlength="30">
        </div>
        <div class="mb-3 mt-3">
            <input id="addr" type="text" class="form-control" placeholder="Enter addr" required maxlength="300">
        </div>
        <button id="btn-join" type="button" class="btn btn-dark">회원가입</button>
    </form>
    <!--회원가입 폼 끝-->
</div>
<!--컨테이너 끝-->

<script>
    // 1.이벤트 리스너
    $("#btn-join").click(() => {
        join();
    });
    // 2. 기능
    // let join = ()=>{ 변수로 담아서 람다 함수 만들기

    // }

    async function join() {
        // 1. username, password, email, addr를 찾아서 오브젝트로 만든다.
        let userDto = {
            username: $("#username").val(),
            password: $("#password").val(),
            email: $("#email").val(),
            addr: $("#addr").val()
        }

        // 2. JOSN으로 변환한다. 통신을 위해서.
        let userJson = JSON.stringify(userDto);

        // 3. fetch 요청
        let response = fetch("/api/join", {
            method: "POST",
            body: userJson,
            headers:{
                'Content-Type': 'application/json; charset=utf-8'
            },
        });

        // 4. 회원가입이 잘되면 알림창 띄우고 로그인 페이지로 이동한다.
        let responseParse = await response.json(); // 파싱

        if(responseParse.code() == 1){
            alert("회원가입 완료되었습니다.");
            location.href = "/loginForm";
        } else {
            alert("회원가입에 실패했습니다." + responseParse.msg);
        }
    }
</script>
{{>/layout/footer}}